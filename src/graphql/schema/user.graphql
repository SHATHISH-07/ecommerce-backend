type User {
  userId: ID!
  name: String!
  username: String!
  email: String!
  address: String!
  phone: String!
  country: String
  state: String
  city: String
  zipCode: String
  role: Role!
  userOrderHistory: [UserOrderHistory]
  password: String!
  emailVerified: Boolean!
  isActive: Boolean!
  isBanned: Boolean!
  createdAt: String
  updatedAt: String
  updatedBy: ID
}

type UserWithoutPassword {
  userId: ID!
  name: String!
  username: String!
  email: String!
  address: String!
  phone: String!
  country: String
  state: String
  city: String
  zipCode: String
  role: Role!
  emailVerified: Boolean!
  userOrderHistory: [UserOrderHistory]
  isActive: Boolean!
  isBanned: Boolean!
  createdAt: String
  updatedAt: String
  updatedBy: ID
}

type UserOrderHistory {
  orderId: Int!
  placedAt: String!
}

input UpdateUserProfileInput {
  name: String
  address: String
  phone: String
  username: String
  country: String
  state: String
  city: String
  zipCode: String
}

type PasswordUpdateResponse {
  success: Boolean!
  message: String!
}

type InitiateResetPasswordResponse {
  success: Boolean!
  message: String!
}

type VerifyResetPasswordOtpResponse {
  success: Boolean!
  message: String!
}

type ResetPasswordResponse {
  success: Boolean!
  message: String!
}

type DeleteAccountResponse {
  success: Boolean!
  message: String!
}

type UpdateUserOrderStatusResponse {
  success: Boolean!
  message: String!
}

type RefundOrderResponse {
  success: Boolean!
  message: String!
}

type AdminDashboardStats {
  totalOrders: Int!
  totalRevenue: Float!
  cancelledOrders: Int!
  returnedOrders: Int!
  totalProducts: Int!
  totalCategories: Int!
  totalUsers: Int!
  activeUsers: Int!
  bannedUsers: Int!
  deactivatedUsers: Int!
}

input UpdateUserEmailInput {
  email: String!
}
